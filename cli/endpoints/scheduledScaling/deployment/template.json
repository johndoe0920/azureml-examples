{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "BaseName": {
        "defaultValue": "ScheduledScaler",
        "type": "string",
        "metadata": {
          "description": "Name used as a base template to named the resources deployed in Azure."
        }
      },
      "GitHubBranch": {
        "type": "string",
        "metadata": {
          "description": "Name of the branch to use when deploying."
        }
      },
      "IdentityName": {
        "type": "string",
        "metadata": {
          "description": "Name for the managed identity created for the azure function to access the workspace."
        }
      },
      "WorkspaceResourceGroupName": {
        "type": "string",
        "metadata": {
          "description": "Name of the resource group where your workspace exists."
        }
      },
      "SubscriptionID": {
        "type": "string",
        "metadata": {
          "description": "Subscription ID where you want to deploy to."
        }
      },
      "WorkspaceName": {
        "type": "string",
        "metadata": {
          "description": "Name of your workspace that holds your endpoint and deployment."
        }
      },
      "EndpointName": {
        "type": "string",
        "metadata": {
          "description": "Name of the endpoint that serves your deployment."
        }
      },
      "DeploymentName": {
        "type": "string",
        "metadata": {
          "description": "Name of the deployment you want to set a scaling schedule."
        }
      },
      "ContainerName": {
        "type": "string",
        "metadata": {
          "description": "Name of the storage container where your schedule json file will be."
        }
      },
      "ScheduleFileName": {
        "type": "string",
        "metadata": {
          "description": "Name of the schedule file you want to use for the scaling."
        }
      }
    },
    "variables": {
      "IdentityName": "[parameters('IdentityName')]",
      "funcAppName": "[toLower(concat(parameters('BaseName')))]",
      "funcStorageName": "[tolower(concat(substring(parameters('BaseName'), 0, min(length(parameters('BaseName')),16)), 'stg'))]",
      "serverFarmName": "[concat(substring(parameters('BaseName'), 0, min(length(parameters('BaseName')),14)), '-srv')]",
      "repoURL": "https://github.com/johndoe0920/azureml-examples.git",
      "applicationInsightsName": "[parameters('BaseName')]",
      "msiUsePrefix": "RunAs=App;AppId="
    },
    "resources": [
      {
        "apiVersion": "2019-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('funcAppName')]",
        "location": "[resourceGroup().location]",
        "kind": "functionapp",
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
              "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('IdentityName'))]": {}
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms',variables('serverFarmName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageName'))]",
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('IdentityName'))]"
        ],
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]",
          "siteConfig": {
            "appSettings": [
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('funcStorageName'), ';AccountKey=', listKeys(variables('funcStorageName'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('funcStorageName'), ';AccountKey=', listKeys(variables('funcStorageName'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "WEBSITE_CONTENTSHARE",
                "value": "[variables('funcAppName')]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~3"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "dotnet"
              },
              {
                "name": "project",
                "value": "cli/endpoints/scheduledScaling/ScheduledScaler"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
              },
              {
                "name": "AzureServicesAuthConnectionString",
                "value": "[concat(variables('msiUsePrefix'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('IdentityName'))).clientId)]"
              },
              {
                "name": "WorkspaceResourceGroupName",
                "value": "[parameters('WorkspaceResourceGroupName')]"
              },
              {
                "name": "WorkspaceName",
                "value": "[parameters('WorkspaceName')]"
              },
              {
                "name": "SubscriptionID",
                "value": "[parameters('SubscriptionID')]"
              },
              {
                "name": "EndpointName",
                "value": "[parameters('EndpointName')]"
              },
              {
                "name": "DeploymentName",
                "value": "[parameters('DeploymentName')]"
              },
              {
                "name": "ContainerName",
                "value": "[parameters('ContainerName')]"
              },
              {
                "name": "ScheduleFileName",
                "value": "[parameters('ScheduleFileName')]"
              }
            ]
          }
        },
        "resources": [
          {
            "apiVersion": "2019-08-01",
            "name": "web",
            "type": "sourcecontrols",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]"
            ],
            "properties": {
              "RepoUrl": "[variables('repoURL')]",
              "branch": "[parameters('GitHubBranch')]",
              "publishRunbook": true,
              "IsManualIntegration": true
            }
          }
        ]
      },
      {
        "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
        "apiVersion": "2018-11-30",
        "name": "[variables('IdentityName')]",
        "location": "[resourceGroup().location]"
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2018-07-01",
        "name": "[variables('funcStorageName')]",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "[variables('funcStorageName')]"
        },
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "resources": [
          {
            "type": "blobServices/containers",
            "apiVersion": "2018-07-01",
            "name": "[concat('default/', parameters('ContainerName'))]",
            "dependsOn": [
              "[variables('funcStorageName')]"
            ],
            "properties": {
              "publicAccess": "Blob"
            }
          }
        ]
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2018-02-01",
        "name": "[variables('serverFarmName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Y1",
          "tier": "Dynamic"
        },
        "properties": {
          "name": "[variables('serverFarmName')]",
          "computeMode": "Dynamic"
        }
      },
      {
        "type": "microsoft.insights/components",
        "apiVersion": "2020-02-02-preview",
        "name": "[variables('applicationInsightsName')]",
        "location": "[resourceGroup().location]",
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
        },
        "properties": {
          "ApplicationId": "[variables('applicationInsightsName')]",
          "Request_Source": "IbizaWebAppExtensionCreate"
        }
      }
    ]
  }